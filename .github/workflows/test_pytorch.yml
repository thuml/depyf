# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: PyTorch Integration Tests

on:
  push:
    branches: [ "master", "test*" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 360
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"] # Python 3.11 bug waits for fix https://github.com/thuml/depyf/actions/runs/7004325219/job/19051829613 .

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-cov
        python -m pip install setuptools
        python -m pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cpu
        python setup.py develop
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        echo "success"
    - name: Test with pytest
      run: |
        coverage run --append tests/test_pytorch/test_mp.py
        coverage run --append tests/test_pytorch/test_no_graph.py
        coverage run --append tests/test_pytorch/test_irregular.py
        coverage run --append tests/test_pytorch/test_simple_graph.py
        coverage run --append tests/test_pytorch/test_cellvars.py
        python tests/test_pytorch/spawn_tests.py
        python tests/test_pytorch/cmp_output.py
        python tests/test_pytorch/test_debug.py 2>&1 < tests/test_pytorch/debug_input.txt > tests/test_pytorch/debug_output.txt
        cat tests/test_pytorch/debug_output.txt
        python tests/test_pytorch/check_debug_output.py

    - name: Upload results to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
